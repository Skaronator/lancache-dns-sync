---
name: Verify

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read
  packages: write
  id-token: write

env:
  GO111MODULE: "on"

jobs:
  conform:
    runs-on: ubuntu-latest
    name: Conform

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - uses: siderolabs/conform@43d9fb6d85d5f01b391245805eefd258db160197 # v0.1.0-alpha.30
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    name: Lint Service
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: '1.25'

      - uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: v2.4.0
          skip-cache: true
          skip-save-cache: true

      - run: |
          go vet ./...

  test:
    runs-on: ubuntu-latest
    name: Unit Tests
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: '1.25'

      - run: |
          go test -race -covermode atomic -coverprofile=covprofile ./...

      - run: |
          go install github.com/mattn/goveralls@latest
          goveralls -coverprofile=covprofile -service=github
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dockerfile_lint:
    runs-on: ubuntu-latest
    name: Lint Dockerfile

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - uses: hadolint/hadolint-action@2332a7b74a6de0dda2e2221d575162eba76ba5e5 # v3.3.0
        with:
          dockerfile: Dockerfile

  build:
    runs-on: ubuntu-latest
    name: Build Service and Container
    needs:
      - lint
      - dockerfile_lint
      - test
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: '1.25'

      - uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0
      - uses: anchore/sbom-action/download-syft@d8a2c0130026bf585de5c176ab8f7ce62d75bf04 # v0.20.7

      - run: git fetch --force --tags

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          args: -p 3 release --snapshot --clean --timeout 60m0s
          version: latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push snapshot Docker images
        run: |
          echo "Listing Docker images built by goreleaser..."
          docker images --format "{{.Repository}}:{{.Tag}}" | grep "SNAPSHOT"
          
          echo "Pushing all snapshot images..."
          for image in $(docker images --format "{{.Repository}}:{{.Tag}}" | grep "SNAPSHOT"); do
            echo "Pushing $image"
            docker push "$image"
          done
